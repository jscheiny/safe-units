// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

// tslint:disable

import { DivideExponents } from "../division";
import { IsArithmeticError } from "../utils";

type QuotientOfNegative5AndNegative5 = DivideExponents<-5, -5>;
const QuotientOfNegative5AndNegative5: QuotientOfNegative5AndNegative5 = 1;

type QuotientOfNegative5AndNegative4IsError = IsArithmeticError<DivideExponents<-5, -4>>;
const QuotientOfNegative5AndNegative4IsError: QuotientOfNegative5AndNegative4IsError = true;

type QuotientOfNegative5AndNegative3IsError = IsArithmeticError<DivideExponents<-5, -3>>;
const QuotientOfNegative5AndNegative3IsError: QuotientOfNegative5AndNegative3IsError = true;

type QuotientOfNegative5AndNegative2IsError = IsArithmeticError<DivideExponents<-5, -2>>;
const QuotientOfNegative5AndNegative2IsError: QuotientOfNegative5AndNegative2IsError = false;

type QuotientOfNegative5AndNegative1 = DivideExponents<-5, -1>;
const QuotientOfNegative5AndNegative1: QuotientOfNegative5AndNegative1 = 5;

type QuotientOfNegative5And0IsError = IsArithmeticError<DivideExponents<-5, 0>>;
const QuotientOfNegative5And0IsError: QuotientOfNegative5And0IsError = true;

type QuotientOfNegative5AndPositive1 = DivideExponents<-5, 1>;
const QuotientOfNegative5AndPositive1: QuotientOfNegative5AndPositive1 = -5;

type QuotientOfNegative5AndPositive2IsError = IsArithmeticError<DivideExponents<-5, 2>>;
const QuotientOfNegative5AndPositive2IsError: QuotientOfNegative5AndPositive2IsError = true;

type QuotientOfNegative5AndPositive3IsError = IsArithmeticError<DivideExponents<-5, 3>>;
const QuotientOfNegative5AndPositive3IsError: QuotientOfNegative5AndPositive3IsError = true;

type QuotientOfNegative5AndPositive4IsError = IsArithmeticError<DivideExponents<-5, 4>>;
const QuotientOfNegative5AndPositive4IsError: QuotientOfNegative5AndPositive4IsError = true;

type QuotientOfNegative5AndPositive5 = DivideExponents<-5, 5>;
const QuotientOfNegative5AndPositive5: QuotientOfNegative5AndPositive5 = -1;

type QuotientOfNegative4AndNegative5IsError = IsArithmeticError<DivideExponents<-4, -5>>;
const QuotientOfNegative4AndNegative5IsError: QuotientOfNegative4AndNegative5IsError = true;

type QuotientOfNegative4AndNegative4 = DivideExponents<-4, -4>;
const QuotientOfNegative4AndNegative4: QuotientOfNegative4AndNegative4 = 1;

type QuotientOfNegative4AndNegative3IsError = IsArithmeticError<DivideExponents<-4, -3>>;
const QuotientOfNegative4AndNegative3IsError: QuotientOfNegative4AndNegative3IsError = true;

type QuotientOfNegative4AndNegative2 = DivideExponents<-4, -2>;
const QuotientOfNegative4AndNegative2: QuotientOfNegative4AndNegative2 = 2;

type QuotientOfNegative4AndNegative1 = DivideExponents<-4, -1>;
const QuotientOfNegative4AndNegative1: QuotientOfNegative4AndNegative1 = 4;

type QuotientOfNegative4And0IsError = IsArithmeticError<DivideExponents<-4, 0>>;
const QuotientOfNegative4And0IsError: QuotientOfNegative4And0IsError = true;

type QuotientOfNegative4AndPositive1 = DivideExponents<-4, 1>;
const QuotientOfNegative4AndPositive1: QuotientOfNegative4AndPositive1 = -4;

type QuotientOfNegative4AndPositive2 = DivideExponents<-4, 2>;
const QuotientOfNegative4AndPositive2: QuotientOfNegative4AndPositive2 = -2;

type QuotientOfNegative4AndPositive3IsError = IsArithmeticError<DivideExponents<-4, 3>>;
const QuotientOfNegative4AndPositive3IsError: QuotientOfNegative4AndPositive3IsError = true;

type QuotientOfNegative4AndPositive4 = DivideExponents<-4, 4>;
const QuotientOfNegative4AndPositive4: QuotientOfNegative4AndPositive4 = -1;

type QuotientOfNegative4AndPositive5IsError = IsArithmeticError<DivideExponents<-4, 5>>;
const QuotientOfNegative4AndPositive5IsError: QuotientOfNegative4AndPositive5IsError = true;

type QuotientOfNegative3AndNegative5IsError = IsArithmeticError<DivideExponents<-3, -5>>;
const QuotientOfNegative3AndNegative5IsError: QuotientOfNegative3AndNegative5IsError = true;

type QuotientOfNegative3AndNegative4IsError = IsArithmeticError<DivideExponents<-3, -4>>;
const QuotientOfNegative3AndNegative4IsError: QuotientOfNegative3AndNegative4IsError = true;

type QuotientOfNegative3AndNegative3 = DivideExponents<-3, -3>;
const QuotientOfNegative3AndNegative3: QuotientOfNegative3AndNegative3 = 1;

type QuotientOfNegative3AndNegative2IsError = IsArithmeticError<DivideExponents<-3, -2>>;
const QuotientOfNegative3AndNegative2IsError: QuotientOfNegative3AndNegative2IsError = true;

type QuotientOfNegative3AndNegative1 = DivideExponents<-3, -1>;
const QuotientOfNegative3AndNegative1: QuotientOfNegative3AndNegative1 = 3;

type QuotientOfNegative3And0IsError = IsArithmeticError<DivideExponents<-3, 0>>;
const QuotientOfNegative3And0IsError: QuotientOfNegative3And0IsError = true;

type QuotientOfNegative3AndPositive1 = DivideExponents<-3, 1>;
const QuotientOfNegative3AndPositive1: QuotientOfNegative3AndPositive1 = -3;

type QuotientOfNegative3AndPositive2IsError = IsArithmeticError<DivideExponents<-3, 2>>;
const QuotientOfNegative3AndPositive2IsError: QuotientOfNegative3AndPositive2IsError = true;

type QuotientOfNegative3AndPositive3 = DivideExponents<-3, 3>;
const QuotientOfNegative3AndPositive3: QuotientOfNegative3AndPositive3 = -1;

type QuotientOfNegative3AndPositive4IsError = IsArithmeticError<DivideExponents<-3, 4>>;
const QuotientOfNegative3AndPositive4IsError: QuotientOfNegative3AndPositive4IsError = true;

type QuotientOfNegative3AndPositive5IsError = IsArithmeticError<DivideExponents<-3, 5>>;
const QuotientOfNegative3AndPositive5IsError: QuotientOfNegative3AndPositive5IsError = true;

type QuotientOfNegative2AndNegative5IsError = IsArithmeticError<DivideExponents<-2, -5>>;
const QuotientOfNegative2AndNegative5IsError: QuotientOfNegative2AndNegative5IsError = true;

type QuotientOfNegative2AndNegative4IsError = IsArithmeticError<DivideExponents<-2, -4>>;
const QuotientOfNegative2AndNegative4IsError: QuotientOfNegative2AndNegative4IsError = true;

type QuotientOfNegative2AndNegative3IsError = IsArithmeticError<DivideExponents<-2, -3>>;
const QuotientOfNegative2AndNegative3IsError: QuotientOfNegative2AndNegative3IsError = true;

type QuotientOfNegative2AndNegative2 = DivideExponents<-2, -2>;
const QuotientOfNegative2AndNegative2: QuotientOfNegative2AndNegative2 = 1;

type QuotientOfNegative2AndNegative1 = DivideExponents<-2, -1>;
const QuotientOfNegative2AndNegative1: QuotientOfNegative2AndNegative1 = 2;

type QuotientOfNegative2And0IsError = IsArithmeticError<DivideExponents<-2, 0>>;
const QuotientOfNegative2And0IsError: QuotientOfNegative2And0IsError = true;

type QuotientOfNegative2AndPositive1 = DivideExponents<-2, 1>;
const QuotientOfNegative2AndPositive1: QuotientOfNegative2AndPositive1 = -2;

type QuotientOfNegative2AndPositive2 = DivideExponents<-2, 2>;
const QuotientOfNegative2AndPositive2: QuotientOfNegative2AndPositive2 = -1;

type QuotientOfNegative2AndPositive3IsError = IsArithmeticError<DivideExponents<-2, 3>>;
const QuotientOfNegative2AndPositive3IsError: QuotientOfNegative2AndPositive3IsError = true;

type QuotientOfNegative2AndPositive4IsError = IsArithmeticError<DivideExponents<-2, 4>>;
const QuotientOfNegative2AndPositive4IsError: QuotientOfNegative2AndPositive4IsError = true;

type QuotientOfNegative2AndPositive5IsError = IsArithmeticError<DivideExponents<-2, 5>>;
const QuotientOfNegative2AndPositive5IsError: QuotientOfNegative2AndPositive5IsError = true;

type QuotientOfNegative1AndNegative5IsError = IsArithmeticError<DivideExponents<-1, -5>>;
const QuotientOfNegative1AndNegative5IsError: QuotientOfNegative1AndNegative5IsError = true;

type QuotientOfNegative1AndNegative4IsError = IsArithmeticError<DivideExponents<-1, -4>>;
const QuotientOfNegative1AndNegative4IsError: QuotientOfNegative1AndNegative4IsError = true;

type QuotientOfNegative1AndNegative3IsError = IsArithmeticError<DivideExponents<-1, -3>>;
const QuotientOfNegative1AndNegative3IsError: QuotientOfNegative1AndNegative3IsError = true;

type QuotientOfNegative1AndNegative2IsError = IsArithmeticError<DivideExponents<-1, -2>>;
const QuotientOfNegative1AndNegative2IsError: QuotientOfNegative1AndNegative2IsError = true;

type QuotientOfNegative1AndNegative1 = DivideExponents<-1, -1>;
const QuotientOfNegative1AndNegative1: QuotientOfNegative1AndNegative1 = 1;

type QuotientOfNegative1And0IsError = IsArithmeticError<DivideExponents<-1, 0>>;
const QuotientOfNegative1And0IsError: QuotientOfNegative1And0IsError = true;

type QuotientOfNegative1AndPositive1 = DivideExponents<-1, 1>;
const QuotientOfNegative1AndPositive1: QuotientOfNegative1AndPositive1 = -1;

type QuotientOfNegative1AndPositive2IsError = IsArithmeticError<DivideExponents<-1, 2>>;
const QuotientOfNegative1AndPositive2IsError: QuotientOfNegative1AndPositive2IsError = true;

type QuotientOfNegative1AndPositive3IsError = IsArithmeticError<DivideExponents<-1, 3>>;
const QuotientOfNegative1AndPositive3IsError: QuotientOfNegative1AndPositive3IsError = true;

type QuotientOfNegative1AndPositive4IsError = IsArithmeticError<DivideExponents<-1, 4>>;
const QuotientOfNegative1AndPositive4IsError: QuotientOfNegative1AndPositive4IsError = true;

type QuotientOfNegative1AndPositive5IsError = IsArithmeticError<DivideExponents<-1, 5>>;
const QuotientOfNegative1AndPositive5IsError: QuotientOfNegative1AndPositive5IsError = true;

type QuotientOf0AndNegative5 = DivideExponents<0, -5>;
const QuotientOf0AndNegative5: QuotientOf0AndNegative5 = 0;

type QuotientOf0AndNegative4 = DivideExponents<0, -4>;
const QuotientOf0AndNegative4: QuotientOf0AndNegative4 = 0;

type QuotientOf0AndNegative3 = DivideExponents<0, -3>;
const QuotientOf0AndNegative3: QuotientOf0AndNegative3 = 0;

type QuotientOf0AndNegative2 = DivideExponents<0, -2>;
const QuotientOf0AndNegative2: QuotientOf0AndNegative2 = 0;

type QuotientOf0AndNegative1 = DivideExponents<0, -1>;
const QuotientOf0AndNegative1: QuotientOf0AndNegative1 = 0;

type QuotientOf0And0IsError = IsArithmeticError<DivideExponents<0, 0>>;
const QuotientOf0And0IsError: QuotientOf0And0IsError = true;

type QuotientOf0AndPositive1 = DivideExponents<0, 1>;
const QuotientOf0AndPositive1: QuotientOf0AndPositive1 = 0;

type QuotientOf0AndPositive2 = DivideExponents<0, 2>;
const QuotientOf0AndPositive2: QuotientOf0AndPositive2 = 0;

type QuotientOf0AndPositive3 = DivideExponents<0, 3>;
const QuotientOf0AndPositive3: QuotientOf0AndPositive3 = 0;

type QuotientOf0AndPositive4 = DivideExponents<0, 4>;
const QuotientOf0AndPositive4: QuotientOf0AndPositive4 = 0;

type QuotientOf0AndPositive5 = DivideExponents<0, 5>;
const QuotientOf0AndPositive5: QuotientOf0AndPositive5 = 0;

type QuotientOfPositive1AndNegative5IsError = IsArithmeticError<DivideExponents<1, -5>>;
const QuotientOfPositive1AndNegative5IsError: QuotientOfPositive1AndNegative5IsError = true;

type QuotientOfPositive1AndNegative4IsError = IsArithmeticError<DivideExponents<1, -4>>;
const QuotientOfPositive1AndNegative4IsError: QuotientOfPositive1AndNegative4IsError = true;

type QuotientOfPositive1AndNegative3IsError = IsArithmeticError<DivideExponents<1, -3>>;
const QuotientOfPositive1AndNegative3IsError: QuotientOfPositive1AndNegative3IsError = true;

type QuotientOfPositive1AndNegative2IsError = IsArithmeticError<DivideExponents<1, -2>>;
const QuotientOfPositive1AndNegative2IsError: QuotientOfPositive1AndNegative2IsError = true;

type QuotientOfPositive1AndNegative1 = DivideExponents<1, -1>;
const QuotientOfPositive1AndNegative1: QuotientOfPositive1AndNegative1 = -1;

type QuotientOfPositive1And0IsError = IsArithmeticError<DivideExponents<1, 0>>;
const QuotientOfPositive1And0IsError: QuotientOfPositive1And0IsError = true;

type QuotientOfPositive1AndPositive1 = DivideExponents<1, 1>;
const QuotientOfPositive1AndPositive1: QuotientOfPositive1AndPositive1 = 1;

type QuotientOfPositive1AndPositive2IsError = IsArithmeticError<DivideExponents<1, 2>>;
const QuotientOfPositive1AndPositive2IsError: QuotientOfPositive1AndPositive2IsError = true;

type QuotientOfPositive1AndPositive3IsError = IsArithmeticError<DivideExponents<1, 3>>;
const QuotientOfPositive1AndPositive3IsError: QuotientOfPositive1AndPositive3IsError = true;

type QuotientOfPositive1AndPositive4IsError = IsArithmeticError<DivideExponents<1, 4>>;
const QuotientOfPositive1AndPositive4IsError: QuotientOfPositive1AndPositive4IsError = true;

type QuotientOfPositive1AndPositive5IsError = IsArithmeticError<DivideExponents<1, 5>>;
const QuotientOfPositive1AndPositive5IsError: QuotientOfPositive1AndPositive5IsError = true;

type QuotientOfPositive2AndNegative5IsError = IsArithmeticError<DivideExponents<2, -5>>;
const QuotientOfPositive2AndNegative5IsError: QuotientOfPositive2AndNegative5IsError = true;

type QuotientOfPositive2AndNegative4IsError = IsArithmeticError<DivideExponents<2, -4>>;
const QuotientOfPositive2AndNegative4IsError: QuotientOfPositive2AndNegative4IsError = true;

type QuotientOfPositive2AndNegative3IsError = IsArithmeticError<DivideExponents<2, -3>>;
const QuotientOfPositive2AndNegative3IsError: QuotientOfPositive2AndNegative3IsError = true;

type QuotientOfPositive2AndNegative2 = DivideExponents<2, -2>;
const QuotientOfPositive2AndNegative2: QuotientOfPositive2AndNegative2 = -1;

type QuotientOfPositive2AndNegative1 = DivideExponents<2, -1>;
const QuotientOfPositive2AndNegative1: QuotientOfPositive2AndNegative1 = -2;

type QuotientOfPositive2And0IsError = IsArithmeticError<DivideExponents<2, 0>>;
const QuotientOfPositive2And0IsError: QuotientOfPositive2And0IsError = true;

type QuotientOfPositive2AndPositive1 = DivideExponents<2, 1>;
const QuotientOfPositive2AndPositive1: QuotientOfPositive2AndPositive1 = 2;

type QuotientOfPositive2AndPositive2 = DivideExponents<2, 2>;
const QuotientOfPositive2AndPositive2: QuotientOfPositive2AndPositive2 = 1;

type QuotientOfPositive2AndPositive3IsError = IsArithmeticError<DivideExponents<2, 3>>;
const QuotientOfPositive2AndPositive3IsError: QuotientOfPositive2AndPositive3IsError = true;

type QuotientOfPositive2AndPositive4IsError = IsArithmeticError<DivideExponents<2, 4>>;
const QuotientOfPositive2AndPositive4IsError: QuotientOfPositive2AndPositive4IsError = true;

type QuotientOfPositive2AndPositive5IsError = IsArithmeticError<DivideExponents<2, 5>>;
const QuotientOfPositive2AndPositive5IsError: QuotientOfPositive2AndPositive5IsError = true;

type QuotientOfPositive3AndNegative5IsError = IsArithmeticError<DivideExponents<3, -5>>;
const QuotientOfPositive3AndNegative5IsError: QuotientOfPositive3AndNegative5IsError = true;

type QuotientOfPositive3AndNegative4IsError = IsArithmeticError<DivideExponents<3, -4>>;
const QuotientOfPositive3AndNegative4IsError: QuotientOfPositive3AndNegative4IsError = true;

type QuotientOfPositive3AndNegative3 = DivideExponents<3, -3>;
const QuotientOfPositive3AndNegative3: QuotientOfPositive3AndNegative3 = -1;

type QuotientOfPositive3AndNegative2IsError = IsArithmeticError<DivideExponents<3, -2>>;
const QuotientOfPositive3AndNegative2IsError: QuotientOfPositive3AndNegative2IsError = true;

type QuotientOfPositive3AndNegative1 = DivideExponents<3, -1>;
const QuotientOfPositive3AndNegative1: QuotientOfPositive3AndNegative1 = -3;

type QuotientOfPositive3And0IsError = IsArithmeticError<DivideExponents<3, 0>>;
const QuotientOfPositive3And0IsError: QuotientOfPositive3And0IsError = true;

type QuotientOfPositive3AndPositive1 = DivideExponents<3, 1>;
const QuotientOfPositive3AndPositive1: QuotientOfPositive3AndPositive1 = 3;

type QuotientOfPositive3AndPositive2IsError = IsArithmeticError<DivideExponents<3, 2>>;
const QuotientOfPositive3AndPositive2IsError: QuotientOfPositive3AndPositive2IsError = true;

type QuotientOfPositive3AndPositive3 = DivideExponents<3, 3>;
const QuotientOfPositive3AndPositive3: QuotientOfPositive3AndPositive3 = 1;

type QuotientOfPositive3AndPositive4IsError = IsArithmeticError<DivideExponents<3, 4>>;
const QuotientOfPositive3AndPositive4IsError: QuotientOfPositive3AndPositive4IsError = true;

type QuotientOfPositive3AndPositive5IsError = IsArithmeticError<DivideExponents<3, 5>>;
const QuotientOfPositive3AndPositive5IsError: QuotientOfPositive3AndPositive5IsError = true;

type QuotientOfPositive4AndNegative5IsError = IsArithmeticError<DivideExponents<4, -5>>;
const QuotientOfPositive4AndNegative5IsError: QuotientOfPositive4AndNegative5IsError = true;

type QuotientOfPositive4AndNegative4 = DivideExponents<4, -4>;
const QuotientOfPositive4AndNegative4: QuotientOfPositive4AndNegative4 = -1;

type QuotientOfPositive4AndNegative3IsError = IsArithmeticError<DivideExponents<4, -3>>;
const QuotientOfPositive4AndNegative3IsError: QuotientOfPositive4AndNegative3IsError = true;

type QuotientOfPositive4AndNegative2 = DivideExponents<4, -2>;
const QuotientOfPositive4AndNegative2: QuotientOfPositive4AndNegative2 = -2;

type QuotientOfPositive4AndNegative1 = DivideExponents<4, -1>;
const QuotientOfPositive4AndNegative1: QuotientOfPositive4AndNegative1 = -4;

type QuotientOfPositive4And0IsError = IsArithmeticError<DivideExponents<4, 0>>;
const QuotientOfPositive4And0IsError: QuotientOfPositive4And0IsError = true;

type QuotientOfPositive4AndPositive1 = DivideExponents<4, 1>;
const QuotientOfPositive4AndPositive1: QuotientOfPositive4AndPositive1 = 4;

type QuotientOfPositive4AndPositive2 = DivideExponents<4, 2>;
const QuotientOfPositive4AndPositive2: QuotientOfPositive4AndPositive2 = 2;

type QuotientOfPositive4AndPositive3IsError = IsArithmeticError<DivideExponents<4, 3>>;
const QuotientOfPositive4AndPositive3IsError: QuotientOfPositive4AndPositive3IsError = true;

type QuotientOfPositive4AndPositive4 = DivideExponents<4, 4>;
const QuotientOfPositive4AndPositive4: QuotientOfPositive4AndPositive4 = 1;

type QuotientOfPositive4AndPositive5IsError = IsArithmeticError<DivideExponents<4, 5>>;
const QuotientOfPositive4AndPositive5IsError: QuotientOfPositive4AndPositive5IsError = true;

type QuotientOfPositive5AndNegative5 = DivideExponents<5, -5>;
const QuotientOfPositive5AndNegative5: QuotientOfPositive5AndNegative5 = -1;

type QuotientOfPositive5AndNegative4IsError = IsArithmeticError<DivideExponents<5, -4>>;
const QuotientOfPositive5AndNegative4IsError: QuotientOfPositive5AndNegative4IsError = true;

type QuotientOfPositive5AndNegative3IsError = IsArithmeticError<DivideExponents<5, -3>>;
const QuotientOfPositive5AndNegative3IsError: QuotientOfPositive5AndNegative3IsError = true;

type QuotientOfPositive5AndNegative2IsError = IsArithmeticError<DivideExponents<5, -2>>;
const QuotientOfPositive5AndNegative2IsError: QuotientOfPositive5AndNegative2IsError = true;

type QuotientOfPositive5AndNegative1 = DivideExponents<5, -1>;
const QuotientOfPositive5AndNegative1: QuotientOfPositive5AndNegative1 = -5;

type QuotientOfPositive5And0IsError = IsArithmeticError<DivideExponents<5, 0>>;
const QuotientOfPositive5And0IsError: QuotientOfPositive5And0IsError = true;

type QuotientOfPositive5AndPositive1 = DivideExponents<5, 1>;
const QuotientOfPositive5AndPositive1: QuotientOfPositive5AndPositive1 = 5;

type QuotientOfPositive5AndPositive2IsError = IsArithmeticError<DivideExponents<5, 2>>;
const QuotientOfPositive5AndPositive2IsError: QuotientOfPositive5AndPositive2IsError = true;

type QuotientOfPositive5AndPositive3IsError = IsArithmeticError<DivideExponents<5, 3>>;
const QuotientOfPositive5AndPositive3IsError: QuotientOfPositive5AndPositive3IsError = true;

type QuotientOfPositive5AndPositive4IsError = IsArithmeticError<DivideExponents<5, 4>>;
const QuotientOfPositive5AndPositive4IsError: QuotientOfPositive5AndPositive4IsError = true;

type QuotientOfPositive5AndPositive5 = DivideExponents<5, 5>;
const QuotientOfPositive5AndPositive5: QuotientOfPositive5AndPositive5 = 1;
